{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascript/AudienceApp.tsx","webpack:///./javascript/AudienceDashboard.tsx","webpack:///./javascript/Login.tsx","webpack:///./javascript/Logout.tsx","webpack:///./javascript/Navbar.tsx","webpack:///./javascript/Registration.tsx","webpack:///./javascript/RegistrationForm.tsx","webpack:///./javascript/RegistrationStatus.tsx","webpack:///./javascript/Signup.tsx","webpack:///./javascript/TeamList.tsx","webpack:///./javascript/packs/audience.tsx"],"names":[],"mappings":"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","file":"audience.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"audience\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./javascript/packs/audience.tsx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { xsuportal } from \"./pb\";\nimport { ApiError, ApiClient } from \"./ApiClient\";\n\nimport React from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\n\nimport { ErrorMessage } from \"./ErrorMessage\";\n\nimport { Navbar } from \"./Navbar\";\nimport { TeamList } from \"./TeamList\";\nimport { AudienceDashboard } from \"./AudienceDashboard\";\nimport { Registration } from \"./Registration\";\nimport { Logout } from \"./Logout\";\nimport { Login } from \"./Login\";\nimport { Signup } from \"./Signup\";\n\nexport interface Props {\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse;\n  client: ApiClient;\n}\n\nexport interface State {}\n\nexport class AudienceApp extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <BrowserRouter>\n        <Navbar session={this.props.session} client={this.props.client} />\n\n        <div className=\"container mt-5\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={({ match }) => {\n                return (\n                  <>\n                    {this.props.session.contest!.status ==\n                      xsuportal.proto.resources.Contest.Status.FINISHED ||\n                    this.props.session.contest!.status ==\n                      xsuportal.proto.resources.Contest.Status.STARTED ? (\n                      <AudienceDashboard\n                        session={this.props.session}\n                        client={this.props.client}\n                      />\n                    ) : (\n                      <TeamList\n                        session={this.props.session}\n                        client={this.props.client}\n                      />\n                    )}\n                  </>\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/teams\"\n              render={({ match }) => {\n                return (\n                  <>\n                    <TeamList\n                      session={this.props.session}\n                      client={this.props.client}\n                    />\n                  </>\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/registration\"\n              render={({ match }) => {\n                return (\n                  <>\n                    <Registration\n                      session={this.props.session}\n                      client={this.props.client}\n                    />\n                  </>\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={({location}) => {\n                const params = new URLSearchParams(location.search);\n                return (\n                  <>\n                    <Login client={this.props.client} redirect={params.get(\"redirect\")} />\n                  </>\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/logout\"\n              render={() => {\n                return (\n                  <>\n                    <Logout\n                      session={this.props.session}\n                      client={this.props.client}\n                    />\n                  </>\n                );\n              }}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={() => {\n                return (\n                  <>\n                    <Signup client={this.props.client} />\n                  </>\n                );\n              }}\n            />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n","import { xsuportal } from \"./pb\";\nimport { ApiError, ApiClient } from \"./ApiClient\";\nimport { TeamPinsMap, TeamPins } from \"./TeamPins\";\n\nimport React from \"react\";\n\nimport { ErrorMessage } from \"./ErrorMessage\";\nimport { ReloadButton } from \"./ReloadButton\";\n\nimport { ContestClock } from \"./ContestClock\";\nimport { ScoreGraph } from \"./ScoreGraph\";\nimport { Leaderboard } from \"./Leaderboard\";\n\nexport interface Props {\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse;\n  client: ApiClient;\n}\n\nexport const AudienceDashboard: React.FC<Props> = ({ session, client }) => {\n  const [requesting, setRequesting] = React.useState(false);\n  const [\n    dashboard,\n    setDashboard,\n  ] = React.useState<xsuportal.proto.services.audience.DashboardResponse | null>(\n    null\n  );\n  const [error, setError] = React.useState<Error | null>(null);\n\n  const [teamPins, setTeamPins] = React.useState(new TeamPins());\n  const [teamPinsMap, setTeamPinsMap] = React.useState(teamPins.all());\n  teamPins.onChange = setTeamPinsMap;\n\n  const refresh = () => {\n    if (requesting) return;\n    setRequesting(true);\n    client\n      .getAudienceDashboard()\n      .then((db) => {\n        setDashboard(db);\n        setError(null);\n        setRequesting(false);\n      })\n      .catch((e) => {\n        setError(e);\n        setRequesting(false);\n      });\n  };\n  React.useEffect(() => {\n    if (!dashboard) refresh();\n  }, [dashboard]);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => refresh(), 10000);\n    return () => clearInterval(timer);\n  }, []);\n\n  if (!dashboard)\n    return (\n      <>\n        {error ? <ErrorMessage error={error} /> : null}\n        <p>Loading...</p>\n      </>\n    );\n\n  return (\n    <>\n      {error ? <ErrorMessage error={error} /> : null}\n      <section className=\"\">\n        <div className=\"level\">\n          <div className=\"level-left\">\n            <ContestClock contest={session.contest!} />\n          </div>\n          <div className=\"level-right\">\n            <ReloadButton requesting={requesting} onClick={refresh} />\n          </div>\n        </div>\n      </section>\n      <section className=\"is-fullwidth py-5 is-hidden-touch\">\n        <ScoreGraph\n          teams={dashboard?.leaderboard?.teams!}\n          contest={session.contest!}\n          teamPins={teamPinsMap}\n        />\n      </section>\n      <div className=\"columns\">\n        <div className=\"column is-12\">\n          <section className=\"py-5\">\n            <p className=\"title\"> Leaderboard </p>\n            <Leaderboard\n              leaderboard={dashboard?.leaderboard!}\n              teamPins={teamPinsMap}\n              onPin={teamPins.set}\n            />\n          </section>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { xsuportal } from \"./pb\";\nimport { ApiError, ApiClient } from \"./ApiClient\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { ErrorMessage } from \"./ErrorMessage\";\n\nexport interface Props {\n  client: ApiClient;\n  redirect?: string | null;\n}\n\nexport interface State {\n  error: Error | null;\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse | null;\n  contestantId: string;\n  password: string;\n  requesting: boolean;\n  registrationSession: xsuportal.proto.services.registration.IGetRegistrationSessionResponse | null;\n}\n\nexport class Login extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      error: null,\n      session: null,\n      contestantId: \"\",\n      password: \"\",\n      requesting: false,\n      registrationSession: null,\n    };\n  }\n\n  public async componentDidMount() {\n    this.setState({\n      registrationSession: await this.props.client.getRegistrationSession(),\n    });\n  }\n\n  public render() {\n    const currentContestant = this.state.session?.contestant;\n\n    if (currentContestant) {\n      if (this.props.redirect) {\n        console.log(\"redirect: \", this.props.redirect.toString());\n        return <Redirect to={this.props.redirect.toString()}></Redirect>;\n      } else {\n        if (currentContestant.isStaff) {\n          return <Redirect to=\"/admin\" />;\n        } else if (\n          this.state.registrationSession?.status ==\n          xsuportal.proto.services.registration.GetRegistrationSessionResponse\n            .Status.JOINED\n        ) {\n          return <Redirect to=\"/contestant\" />;\n        } else {\n          return (\n            <>\n              <article className=\"message is-success\">\n                <div className=\"message-header\">\n                  <p>参加登録してください</p>\n                </div>\n                <div className=\"message-body\">\n                  <p>\n                    参加登録するには、\n                    <a href=\"/registration\">チームを新しく作成する</a>\n                    か、招待URLから既存チームに参加してください。\n                  </p>\n                </div>\n              </article>\n            </>\n          );\n        }\n      }\n    } else {\n      return (\n        <>\n          <header>\n            <h1 className=\"title is-1\">ログイン</h1>\n          </header>\n          <main>\n            {this.renderError()}\n            {this.renderForm()}\n          </main>\n        </>\n      );\n    }\n  }\n\n  public renderError() {\n    if (!this.state.error) return;\n    return <ErrorMessage error={this.state.error} />;\n  }\n\n  public renderForm() {\n    return (\n      <>\n        <section className=\"columns mt-2\">\n          <form className=\"column is-half\" onSubmit={this.onSubmit.bind(this)}>\n            {this.renderFormFields()}\n          </form>\n        </section>\n      </>\n    );\n  }\n\n  public renderFormFields() {\n    return (\n      <>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"fieldContestantId\">\n            ログインID\n          </label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"text\"\n              required\n              id=\"fieldContestantId\"\n              name=\"contestantId\"\n              autoComplete=\"username\"\n              onChange={this.onChange.bind(this)}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"fieldPassword\">\n            パスワード\n          </label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              type=\"password\"\n              required\n              id=\"fieldPassword\"\n              name=\"password\"\n              autoComplete=\"current-password\"\n              onChange={this.onChange.bind(this)}\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"control\">\n            <button className=\"button is-primary\">ログイン</button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  public onChange(event: React.FormEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value as unknown,\n    } as Pick<State, keyof State>);\n  }\n\n  public async onSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (this.state.requesting) return;\n    try {\n      this.setState({ requesting: true });\n      await this.props.client.login({\n        contestantId: this.state.contestantId,\n        password: this.state.password,\n      });\n      const session = await this.props.client.getCurrentSession();\n      const registrationSession = await this.props.client.getRegistrationSession();\n\n      this.setState({\n        error: null,\n        requesting: false,\n        session: session,\n        registrationSession: registrationSession,\n      });\n      location.reload();\n    } catch (err) {\n      this.setState({ error: err, requesting: false });\n    }\n\n    try {\n    } catch (err) {\n      this.setState({ error: err, requesting: false });\n    }\n  }\n}\n","import { xsuportal } from \"./pb\";\nimport { ApiError, ApiClient } from \"./ApiClient\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { ErrorMessage } from \"./ErrorMessage\";\n\nexport interface Props {\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse;\n  client: ApiClient;\n}\n\nexport interface State {\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse;\n  error: Error | null;\n  requesting: boolean;\n  logoutSucceeded: boolean;\n}\n\nexport class Logout extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      session: this.props.session,\n      error: null,\n      requesting: false,\n      logoutSucceeded: false,\n    };\n  }\n\n  public async componentDidMount() {\n    if (this.state.requesting) return;\n    try {\n      this.setState({ requesting: true });\n      await this.logout();\n      const session = await this.props.client.getCurrentSession();\n      this.setState({\n        session: session,\n        error: null,\n        requesting: false,\n      });\n      location.reload();\n    } catch (err) {\n      this.setState({ error: err, requesting: false });\n    }\n  }\n\n  public render() {\n    const currentContestant = this.state.session.contestant;\n    if (!currentContestant) {\n      return (\n        <>\n          <Redirect to=\"/\"></Redirect>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <header>\n            <h1 className=\"title is-1\">ログアウト</h1>\n          </header>\n          <main>{this.renderError()}</main>\n        </>\n      );\n    }\n  }\n\n  public renderError() {\n    if (!this.state.error) return;\n    return <ErrorMessage error={this.state.error} />;\n  }\n\n  logout() {\n    return this.props.client.logout({});\n  }\n}\n","import { xsuportal } from \"./pb\";\nimport { ApiError, ApiClient } from \"./ApiClient\";\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { ErrorMessage } from \"./ErrorMessage\";\n\nexport interface Props {\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse;\n  client: ApiClient;\n}\n\nexport interface State {}\n\nexport class Navbar extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  public render() {\n    return (\n      <nav\n        className=\"navbar is-dark\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link className=\"navbar-item\" to=\"/\">\n              XSUCON Portal\n            </Link>\n          </div>\n          <div className=\"navbar-menu is-active\">\n            <div className=\"navbar-start\">\n              <Link className=\"navbar-item\" to=\"/teams\">\n                チーム一覧\n              </Link>\n            </div>\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  {this.renderNavbarContestButton()}\n                  {this.renderNavbarLoginButtons()}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n\n  public renderNavbarContestButton() {\n    if (this.props.session.contestant) {\n      switch (this.props.session.contest?.status) {\n        case xsuportal.proto.resources.Contest.Status.REGISTRATION:\n        case xsuportal.proto.resources.Contest.Status.STANDBY:\n          return (\n            <Link className=\"button is-light\" to=\"/registration\">\n              参加登録/修正\n            </Link>\n          );\n        case xsuportal.proto.resources.Contest.Status.STARTED:\n        case xsuportal.proto.resources.Contest.Status.FINISHED:\n          return (\n            <a className=\"button is-light\" href=\"/contestant\">\n              競技参加者向けページ\n            </a>\n          );\n      }\n    } else {\n      if (\n        this.props.session.contest?.status ===\n        xsuportal.proto.resources.Contest.Status.REGISTRATION\n      ) {\n        return (\n          <Link className=\"button is-light\" to=\"/registration\">\n            参加登録\n          </Link>\n        );\n      } else {\n        return null;\n      }\n    }\n  }\n\n  public renderNavbarLoginButtons() {\n    if (this.props.session.contestant) {\n      return (\n        <Link className=\"button is-light\" to=\"/logout\">\n          ログアウト\n        </Link>\n      );\n    } else {\n      return (\n        <>\n          <Link className=\"button is-light\" to=\"/signup\">\n            アカウント作成\n          </Link>\n          <Link className=\"button is-light\" to=\"/login\">\n            ログイン\n          </Link>\n        </>\n      );\n    }\n  }\n}\n","import { xsuportal } from \"./pb\";\nimport { ApiError, ApiClient } from \"./ApiClient\";\nimport React from \"react\";\n\nimport { ErrorMessage } from \"./ErrorMessage\";\n\nimport { RegistrationForm } from \"./RegistrationForm\";\nimport { RegistrationStatus } from \"./RegistrationStatus\";\n\nexport interface Props {\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse;\n  client: ApiClient;\n}\n\nexport interface State {\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse;\n  registrationSession: xsuportal.proto.services.registration.GetRegistrationSessionResponse | null;\n  teamId: number | null;\n  inviteToken: string | null;\n  edit: boolean;\n  error: Error | null;\n}\n\nexport class Registration extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const params = new URLSearchParams(document.location.search);\n    this.state = {\n      session: this.props.session,\n      registrationSession: null,\n      teamId: parseInt(params.get(\"team_id\") || \"0\", 10),\n      inviteToken: params.get(\"invite_token\"),\n      edit: false,\n      error: null,\n    };\n  }\n\n  public componentDidMount() {\n    this.updateRegistrationSession();\n  }\n\n  async updateRegistrationSession() {\n    try {\n      const registrationSession = await this.props.client.getRegistrationSession(\n        {\n          teamId: this.state.teamId,\n          inviteToken: this.state.inviteToken,\n        }\n      );\n      let session = this.state.session;\n      if (this.state.registrationSession) {\n        // XXX: Contestant name might be updated inside the registration page, and it is only included in GetCurrentSession response, not available in GetRegistrationSession.\n        session = await this.props.client.getCurrentSession();\n      }\n      this.setState({ session, registrationSession, edit: false });\n    } catch (err) {\n      this.setState({ error: err });\n    }\n  }\n\n  enableEdit() {\n    this.setState({ edit: true });\n  }\n\n  public render() {\n    return (\n      <>\n        <header>\n          <h1 className=\"title is-1\">参加登録</h1>\n        </header>\n        <main>\n          {this.renderError()}\n          {this.renderPhase()}\n        </main>\n      </>\n    );\n  }\n\n  public renderError() {\n    if (!this.state.error) return;\n    return <ErrorMessage error={this.state.error} />;\n  }\n\n  public renderPhase() {\n    if (this.state.registrationSession) {\n      const login = this.renderTeam();\n      switch (this.state.registrationSession.status) {\n        case xsuportal.proto.services.registration\n          .GetRegistrationSessionResponse.Status.NOT_LOGGED_IN:\n          return (\n            <>\n              <div className=\"message is-danger\">\n                <div className=\"message-body\">\n                  参加登録をするにはログインしてください\n                </div>\n              </div>\n              {login}\n            </>\n          );\n          break;\n        case xsuportal.proto.services.registration\n          .GetRegistrationSessionResponse.Status.CLOSED:\n          return (\n            <>\n              <div className=\"message is-danger\">\n                <div className=\"message-body\">\n                  参加登録を現在受け付けていません\n                  (定員到達、締切後、もしくは受付開始前)\n                </div>\n              </div>\n              {login}\n            </>\n          );\n          break;\n        case xsuportal.proto.services.registration\n          .GetRegistrationSessionResponse.Status.NOT_JOINABLE:\n          return (\n            <>\n              <div className=\"message is-danger\">\n                <div className=\"message-body\">\n                  招待元のチームメンバー数が上限に達しているため、この招待を利用して参加登録を進めることはできません。\n                </div>\n              </div>\n              {login}\n            </>\n          );\n          break;\n        case xsuportal.proto.services.registration\n          .GetRegistrationSessionResponse.Status.CREATABLE:\n        case xsuportal.proto.services.registration\n          .GetRegistrationSessionResponse.Status.JOINABLE:\n          return (\n            <>\n              {login}\n              <RegistrationForm\n                client={this.props.client}\n                session={this.state.session}\n                inviteToken={this.state.inviteToken}\n                registrationSession={this.state.registrationSession}\n                updateRegistrationSession={this.updateRegistrationSession.bind(\n                  this\n                )}\n              />\n            </>\n          );\n          break;\n        case xsuportal.proto.services.registration\n          .GetRegistrationSessionResponse.Status.JOINED:\n          if (this.state.edit) {\n            return (\n              <RegistrationForm\n                client={this.props.client}\n                session={this.state.session}\n                inviteToken={null}\n                registrationSession={this.state.registrationSession}\n                updateRegistrationSession={this.updateRegistrationSession.bind(\n                  this\n                )}\n              />\n            );\n          }\n          return (\n            <RegistrationStatus\n              client={this.props.client}\n              session={this.state.session}\n              registrationSession={this.state.registrationSession}\n              updateRegistrationSession={this.updateRegistrationSession.bind(\n                this\n              )}\n              enableEdit={this.enableEdit.bind(this)}\n            />\n          );\n          break;\n      }\n    } else {\n      return <p>Loading...</p>;\n    }\n    const err = new Error(\"[BUG] undeterminable state\");\n    throw err;\n  }\n\n  renderTeam() {\n    if (!this.state.registrationSession || !this.state.registrationSession.team)\n      return;\n\n    const team = this.state.registrationSession.team;\n    return (\n      <>\n        <section className=\"mt-3\">\n          <h3 className=\"title is-3\">チームから招待されています</h3>\n          <p>\n            {team.leader!.name} のチーム {team.name}{\" \"}\n            からの招待を受諾して参加登録します。\n          </p>\n        </section>\n      </>\n    );\n  }\n}\n","import { xsuportal } from \"./pb\";\nimport { ApiClient } from \"./ApiClient\";\nimport React from \"react\";\n\nimport { ErrorMessage } from \"./ErrorMessage\";\n\nexport interface Props {\n  client: ApiClient;\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse;\n  inviteToken: string | null;\n  registrationSession: xsuportal.proto.services.registration.GetRegistrationSessionResponse;\n  updateRegistrationSession: () => void;\n}\n\nexport interface State {\n  teamName: string;\n  name: string;\n  emailAddress: string;\n  isStudent: boolean;\n  requesting: boolean;\n  requestError: Error | null;\n}\n\nexport class RegistrationForm extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      teamName: this.props.registrationSession.team?.name ?? \"\",\n      name: this.props.session.contestant?.name ?? \"\",\n      emailAddress:\n        this.props.registrationSession.team?.detail?.emailAddress ?? \"\",\n      isStudent: this.props.session.contestant?.isStudent ?? false,\n      requesting: false,\n      requestError: null,\n    };\n  }\n\n  public async onSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (this.state.requesting) return;\n    try {\n      this.setState({ requesting: true });\n      if (this.isEditing()) {\n        await this.updateRegistration();\n      } else {\n        if (this.props.registrationSession.team) {\n          await this.joinTeam();\n        } else {\n          await this.createTeam();\n        }\n      }\n      this.setState({ requestError: null, requesting: false });\n      this.props.updateRegistrationSession();\n    } catch (err) {\n      this.setState({ requestError: err, requesting: false });\n    }\n  }\n\n  public onChange(event: React.FormEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value as unknown,\n    } as Pick<State, keyof State>);\n  }\n\n  createTeam() {\n    return this.props.client.createTeam({\n      teamName: this.state.teamName,\n      emailAddress: this.state.emailAddress,\n      name: this.state.name,\n      isStudent: this.state.isStudent,\n    });\n  }\n\n  joinTeam() {\n    return this.props.client.joinTeam({\n      inviteToken: this.props.inviteToken,\n      teamId: this.props.registrationSession.team!.id,\n      name: this.state.name,\n      isStudent: this.state.isStudent,\n    });\n  }\n\n  updateRegistration() {\n    return this.props.client.updateRegistration({\n      teamName: this.state.teamName,\n      emailAddress: this.state.emailAddress,\n      name: this.state.name,\n      isStudent: this.state.isStudent,\n    });\n  }\n\n  isEditing() {\n    return (\n      this.props.registrationSession.status ==\n      xsuportal.proto.services.registration.GetRegistrationSessionResponse\n        .Status.JOINED\n    );\n  }\n\n  public render() {\n    return (\n      <>\n        <section className=\"mt-2\">\n          <h3 className=\"title is-3\">注意事項</h3>\n          <ul>\n            <li>XSUCON への参加には参加規約への同意が必要です。</li>\n            <li>\n              参加登録が完了すると、他のチームへの参加はできなくなります。\n            </li>\n            <li>\n              1人目 (チーム代表者) の登録後、チームメンバーを招待するための URL\n              を確認することができます。招待 URL\n              を共有し、チームメンバー全員の登録をしてください。\n            </li>\n            <li>\n              チーム名・代表者名に公序良俗に反する名前は使わないでください。\n            </li>\n            <li>\n              チーム名・代表者名に機種依存文字・絵文字・HTMLタグなどが入っていた場合、サイトへの表示時に表現を変えさせていただく場合があります。\n            </li>\n          </ul>\n        </section>\n        <section className=\"mt-2\">\n          <h3 className=\"title is-3\">\n            {this.isEditing() ? \"編集\" : \"詳細の入力\"}\n          </h3>\n          <form onSubmit={this.onSubmit.bind(this)}>\n            {this.renderTeamFormFields()}\n            {this.renderContestantFormFields()}\n\n            <div className=\"field\">\n              <div className=\"control\">\n                <button\n                  className=\"button is-primary\"\n                  disabled={this.state.requesting}\n                >\n                  {this.isEditing() ? \"保存\" : \"参加規約に同意して登録\"}\n                </button>\n              </div>\n            </div>\n\n            {this.renderError()}\n          </form>\n        </section>\n      </>\n    );\n  }\n\n  public renderTeamFormFields() {\n    if (\n      this.props.registrationSession.team &&\n      this.props.registrationSession.team.leaderId !=\n        this.props.session.contestant?.id\n    ) {\n      const leader = this.props.registrationSession.team.leader!;\n      return (\n        <>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"fieldTeamName\">\n              チーム名\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                disabled\n                id=\"fieldTeamName\"\n                value={this.props.registrationSession.team.name || \"\"}\n              />\n            </div>\n            {this.isEditing() ? (\n              <p className=\"help\">\n                代表者 {leader.name}{\" \"}\n                のチームへ参加しています。チーム名・代表者メールアドレスは代表者のみが変更可能です。\n              </p>\n            ) : (\n              <p className=\"help\">\n                招待を利用し、代表者 {leader.name} のチームへ参加します。\n              </p>\n            )}\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"fieldTeamName\">\n              チーム名\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                required\n                id=\"fieldTeamName\"\n                name=\"teamName\"\n                value={this.state.teamName}\n                onChange={this.onChange.bind(this)}\n              />\n            </div>\n            {this.isEditing() ? (\n              <p className=\"help\"></p>\n            ) : (\n              <p className=\"help\">\n                現在ログインしている方を代表とするチームを作成します。代表者は変更できません。既存のチームへ参加する場合、代表者もしくはチームメンバーの方より招待\n                URL を受け取ってください。\n              </p>\n            )}\n          </div>\n\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"fieldEmailAddress\">\n              代表者メールアドレス\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"email\"\n                autoComplete=\"email\"\n                spellCheck={false}\n                required\n                id=\"fieldEmailAddress\"\n                name=\"emailAddress\"\n                value={this.state.emailAddress}\n                onChange={this.onChange.bind(this)}\n              />\n            </div>\n            <p className=\"help\">確認メールなどは送信されません。</p>\n          </div>\n        </>\n      );\n    }\n  }\n\n  public renderContestantFormFields() {\n    return (\n      <>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"fieldName\">\n            {!this.props.registrationSession.team ? \"代表者名\" : \"参加者名\"}\n          </label>\n          <div className=\"control\">\n            <input\n              className=\"input\"\n              required\n              id=\"fieldName\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.onChange.bind(this)}\n            />\n          </div>\n          <p className=\"help\">\n            公開されます。本名でなくて構いません (id, HN,\n            その他匿名な記入でも問題ありません)。複数名の名前を記載することはできません\n            (2\n            人目以降の登録は、登録後確認できる招待URLを利用して、それぞれ個別に登録してください)。\n          </p>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">学生ですか?</label>\n          <div className=\"control\">\n            <input\n              className=\"checkbox\"\n              type=\"checkbox\"\n              name=\"isStudent\"\n              checked={this.state.isStudent}\n              onChange={this.onChange.bind(this)}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  public renderError() {\n    if (!this.state.requestError) return null;\n    return <ErrorMessage error={this.state.requestError} />;\n  }\n}\n","import { xsuportal } from \"./pb\";\nimport { ApiClient } from \"./ApiClient\";\nimport React from \"react\";\n\nimport { ErrorMessage } from \"./ErrorMessage\";\n\nexport interface Props {\n  client: ApiClient;\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse;\n  registrationSession: xsuportal.proto.services.registration.GetRegistrationSessionResponse;\n  updateRegistrationSession: () => void;\n  enableEdit: () => void;\n}\n\nexport interface State {\n  error: Error | null;\n}\n\nexport class RegistrationStatus extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      error: null,\n    };\n  }\n\n  onEditButtonClick(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n    this.props.enableEdit();\n  }\n\n  async onWithdrawButtonClick(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n    if (\n      !confirm(\n        \"本当にキャンセルしてよろしいですか? この操作は元に戻すことができません。\"\n      )\n    )\n      return;\n    try {\n      await this.props.client.deleteRegistration();\n      alert(\"参加をキャンセルしました。\");\n      document.location.href = \"/\";\n    } catch (error) {\n      this.setState({ error });\n    }\n  }\n\n  public render() {\n    return (\n      <>\n        <section className=\"mt-2\">\n          <h3 className=\"title is-3\">登録完了</h3>\n          <ol>\n            <li>\n              必要に応じ、下記より招待 URL をコピー &\n              チームメンバーへ共有し、チームメンバーの参加登録を行ってください\n              (代表者を含め 3 人まで)。\n            </li>\n          </ol>\n        </section>\n\n        <div className=\"mt-3\">\n          <div className=\"columns\">\n            <section className=\"column\">\n              <h4 className=\"title is-4\">\n                チーム: {this.props.registrationSession.team!.name}\n              </h4>\n              <p>\n                招待URL:{\" \"}\n                <small>\n                  <a href={this.props.registrationSession.memberInviteUrl}>\n                    {this.props.registrationSession.memberInviteUrl}\n                  </a>\n                </small>\n              </p>\n\n              <h5 className=\"title is-5 mt-3\">メンバーリスト</h5>\n              {this.renderTeamMembers()}\n            </section>\n          </div>\n        </div>\n\n        <section className=\"mt-3\">\n          <h4 className=\"title is-4\">登録内容の編集</h4>\n          <p>\n            <button\n              className=\"button is-info\"\n              onClick={this.onEditButtonClick.bind(this)}\n            >\n              編集\n            </button>\n            <br />\n            参加者名・学生申告といった登録内容の修正ができます。チーム名は代表者のみが変更可能です。\n          </p>\n          <p>\n            <button\n              className=\"button is-danger\"\n              onClick={this.onWithdrawButtonClick.bind(this)}\n            >\n              辞退\n            </button>\n            <br />\n            参加をキャンセルします。\n            {this.props.registrationSession.team!.leaderId ==\n            this.props.session.contestant!.id ? (\n              <strong>\n                代表者のため、辞退するとチームとして参加辞退となります。\n              </strong>\n            ) : (\n              <span>\n                チームメンバーであるため、チームから離脱します\n                (他のメンバーには影響しません)。\n              </span>\n            )}\n          </p>\n          {this.renderError()}\n        </section>\n      </>\n    );\n  }\n\n  renderTeamMembers() {\n    return this.props.registrationSession.team!.members!.map((member) =>\n      this.renderTeamMember(member)\n    );\n  }\n\n  renderTeamMember(member: xsuportal.proto.resources.IContestant) {\n    return (\n      <div className=\"card mt-2\" key={member.id!.toString()}>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <i className=\"material-icons\">person</i>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-5\">{member.name}</p>\n              <p className=\"subtitle is-6\">\n                {this.props.registrationSession.team!.leaderId == member.id ? (\n                  <span className=\"tag is-danger\">代表者</span>\n                ) : null}\n                {member.isStudent ? (\n                  <span className=\"tag is-info\">学生</span>\n                ) : null}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderError() {\n    if (!this.state.error) return null;\n    return <ErrorMessage error={this.state.error} />;\n  }\n}\n","import { xsuportal } from \"./pb\";\nimport { ApiError, ApiClient } from \"./ApiClient\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { ErrorMessage } from \"./ErrorMessage\";\n\nexport interface Props {\n  client: ApiClient;\n}\n\nexport interface State {\n  error: Error | null;\n  contestantId: string;\n  password: string;\n  requesting: boolean;\n  signupSucceeded: boolean;\n}\n\nexport class Signup extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      error: null,\n      contestantId: \"\",\n      password: \"\",\n      requesting: false,\n      signupSucceeded: false,\n    };\n  }\n\n  public componentDidMount() {}\n\n  public render() {\n    return (\n      <>\n        <header>\n          <h1 className=\"title is-1\">アカウント作成</h1>\n        </header>\n        <main>\n          {this.renderError()}\n          {this.renderForm()}\n          {this.renderFinishMessage()}\n        </main>\n      </>\n    );\n  }\n\n  public renderError() {\n    if (!this.state.error) return;\n    return <ErrorMessage error={this.state.error} />;\n  }\n\n  public renderForm() {\n    return (\n      <>\n        <section\n          className=\"columns mt-2\"\n          style={{ display: this.state.signupSucceeded ? \"none\" : \"\" }}\n        >\n          <form className=\"column is-half\" onSubmit={this.onSubmit.bind(this)}>\n            {this.renderFormFields()}\n          </form>\n        </section>\n      </>\n    );\n  }\n\n  public renderFormFields() {\n    if (this.state.signupSucceeded) {\n      return (\n        <>\n          <p>\n            参加登録するには、チームを新しく作成するか、招待URLから既存チームに参加してください。\n          </p>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"fieldContestantId\">\n              ログインID\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                required\n                id=\"fieldContestantId\"\n                name=\"contestantId\"\n                autoComplete=\"username\"\n                onChange={this.onChange.bind(this)}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <label className=\"label\" htmlFor=\"fieldPassword\">\n              パスワード\n            </label>\n            <div className=\"control\">\n              <input\n                className=\"input\"\n                type=\"password\"\n                required\n                id=\"fieldPassword\"\n                name=\"password\"\n                autoComplete=\"current-password\"\n                onChange={this.onChange.bind(this)}\n              />\n            </div>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <button className=\"button is-primary\">送信</button>\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n\n  public renderFinishMessage() {\n    if (this.state.signupSucceeded) {\n      return (\n        <>\n          <article className=\"message is-success\">\n            <div className=\"message-header\">\n              <p>アカウントを作成しました</p>\n            </div>\n            <div className=\"message-body\">\n              <p>\n                参加登録するには、\n                <a href=\"/registration\">チームを新しく作成する</a>\n                か、招待 URL から既存チームに参加してください。\n              </p>\n            </div>\n          </article>\n        </>\n      );\n    }\n  }\n\n  public onChange(event: React.FormEvent<HTMLInputElement>) {\n    const target = event.target as HTMLInputElement;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value as unknown,\n    } as Pick<State, keyof State>);\n  }\n\n  public async onSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (this.state.requesting) return;\n    try {\n      await this.signup();\n      this.setState({ requesting: true });\n      this.setState({\n        signupSucceeded: true,\n        error: null,\n        requesting: false,\n      });\n      // this.props.root.setState({ loggedin: true });\n      // location.reload();\n      location.href = \"/\";\n    } catch (err) {\n      this.setState({ error: err });\n    }\n  }\n\n  signup() {\n    return this.props.client.signup({\n      contestantId: this.state.contestantId,\n      password: this.state.password,\n    });\n  }\n}\n","import { xsuportal } from \"./pb\";\nimport { ApiError, ApiClient } from \"./ApiClient\";\nimport React from \"react\";\n\nimport { ErrorMessage } from \"./ErrorMessage\";\n\nexport interface Props {\n  session: xsuportal.proto.services.common.GetCurrentSessionResponse;\n  client: ApiClient;\n}\n\nexport interface State {\n  teamList: xsuportal.proto.services.audience.ListTeamsResponse | null;\n  error: Error | null;\n}\n\nexport class TeamList extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    const params = new URLSearchParams(document.location.search);\n    this.state = {\n      teamList: null,\n      error: null,\n    };\n  }\n\n  public componentDidMount() {\n    this.updateTeamList();\n  }\n\n  async updateTeamList() {\n    try {\n      const teamList = await this.props.client.listTeams();\n      this.setState({ teamList });\n    } catch (error) {\n      this.setState({ error });\n    }\n  }\n  public render() {\n    return (\n      <>\n        <header>\n          <h1 className=\"title is-1\">参加チームリスト</h1>\n        </header>\n        <main>\n          {this.renderError()}\n          {this.renderTeamList()}\n        </main>\n      </>\n    );\n  }\n\n  public renderError() {\n    if (!this.state.error) return;\n    return <ErrorMessage error={this.state.error} />;\n  }\n\n  renderTeamList() {\n    if (!this.state.teamList) return <p>Loading...</p>;\n    return (\n      <>\n        {this.state.teamList.teams!.map((team, i) => this.renderTeam(team, i))}\n      </>\n    );\n  }\n\n  renderTeam(\n    team: xsuportal.proto.services.audience.ListTeamsResponse.ITeamListItem,\n    i: number\n  ) {\n    return (\n      <div className=\"card mt-4\" key={i}>\n        <div className=\"card-content\">\n          <p className=\"title is-5\">{team.name}</p>\n          {team.isStudent ? (\n            <p className=\"subtitle\">\n              <span className=\"tag is-info\">学生チーム</span>\n            </p>\n          ) : null}\n          <ul>\n            {team.memberNames!.map((name, j) => (\n              <li key={j}>{name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import './application.scss';\nimport { ApiClient } from \"../ApiClient\";\nimport { updateNavBarSession } from \"../NavbarSession\";\nimport { AudienceApp } from \"../AudienceApp\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n(async function () {\n  const client = new ApiClient();\n  const session = await client.getCurrentSession();\n  updateNavBarSession(session);\n  const elem = document.getElementById(\"app\");\n  ReactDOM.render(<AudienceApp session={session} client={client} />, elem);\n})();\n"],"sourceRoot":""}